function net  = initializeMitochondria()
f=1/100 ;
net.layers = {} ;
net.classes = {1,2};
net.layers{end+1} = struct('type', 'conv', ...
    'filters', f*randn(11,11,1,5, 'single'), ...
    'biases', zeros(1, 5, 'single'), ...
    'stride', 3, ...
    'pad', 0) ;
net.layers{end+1} = struct('type', 'pool', ...
    'method', 'max', ...
    'pool', [3 3], ...
    'stride', 2, ...
    'pad', [0 1 0 1]) ; % Emulate caffe
% 3 relu1
net.layers{end+1} = struct('type', 'relu') ;


net.layers{end+1} = struct('type', 'conv', ...
    'filters', f*randn(7,7,5,20, 'single'),...
    'biases', zeros(1,20,'single'), ...
    'stride', 2 , ...
    'pad', 0) ;
net.layers{end+1} = struct('type', 'pool', ...
    'method', 'max', ...
    'pool', [2 2], ...
    'stride', 2, ...
    'pad', [0 1 0 1]) ; % Emulate caffe
% 3 relu1
net.layers{end+1} = struct('type', 'relu') ;

net.layers{end+1} = struct('type', 'conv', ...
    'filters', f*randn(5,5,20,100, 'single'),...
    'biases', zeros(1,100,'single'), ...
    'stride', 2, ...
    'pad', 0) ;
net.layers{end+1} = struct('type', 'pool', ...
    'method', 'max', ...
    'pool', [2 2], ...
    'stride', 2, ...
    'pad', [0 1 0 1]) ; % Emulate caffe
% 3 relu1
net.layers{end+1} = struct('type', 'relu') ;

net.layers{end+1} = struct('type', 'conv', ...
    'filters', f*randn (1,1,100,100, 'single'),...
    'biases', zeros(1,100,'single'), ...
    'stride', 1, ...
    'pad', 0) ;
net.layers{end+1} = struct('type', 'conv', ...
    'filters', f*randn(1,1,100,2, 'single'),...
    'biases', zeros(1,2,'single'), ...
    'stride', 1, ...
    'pad', 0) ;

net.layers{end+1} = struct('type', 'softmaxloss') ;
end
